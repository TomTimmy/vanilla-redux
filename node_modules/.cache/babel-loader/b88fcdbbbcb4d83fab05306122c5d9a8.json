{"ast":null,"code":"var _jsxFileName = \"/Users/tedchoi/Documents/GitHub/vanilla-redux/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  toDos\n}) {\n  _s();\n\n  const [text, setText] = useState(\" \");\n\n  function onChange(e) {\n    setText(e.target.value);\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    console.log(text);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onChange: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: JSON.stringify(toDos)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //! A function mapStateToProps will give \"state\" (from \"store\") to here, \"Home\".\n\n\n_s(Home, \"lkSk9E2b6/devSaU6Q9DUXO4KIM=\");\n\n_c = Home;\n\nfunction mapStateToProps(state, ownProps) {\n  //! Whatever I return, It will go to my component \"Home\" as a PROPS\n  // !Thanks to function, \"connect\"\n  return {\n    addedProps: \"Yeah I am new!\"\n  };\n} //! So, \"mapStateToProps\" means \"from the redux state, put a little bit into the home component as a props.\"\n//!\n\n\nexport default connect(mapStateToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tedchoi/Documents/GitHub/vanilla-redux/src/routes/Home.js"],"names":["React","useState","connect","Home","toDos","text","setText","onChange","e","target","value","onSubmit","preventDefault","console","log","JSON","stringify","mapStateToProps","state","ownProps","addedProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,GAAD,CAAhC;;AACA,WAASM,QAAT,CAAkBC,CAAlB,EAAqB;AACnBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AACD,WAASC,QAAT,CAAkBH,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEM,QAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEN,IAA1B;AAAgC,QAAA,QAAQ,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,gBACKQ,IAAI,CAACC,SAAL,CAAeZ,KAAf;AADL;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAWD,C,CAED;;;GAvBSD,I;;KAAAA,I;;AAwBT,SAASc,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC;AACA;AACA,SAAO;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAP;AACD,C,CAAC;AAEF;;;AACA,eAAelB,OAAO,CAACe,eAAD,CAAP,CAAyBd,IAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction Home({ toDos }) {\n  const [text, setText] = useState(\" \");\n  function onChange(e) {\n    setText(e.target.value);\n  }\n  function onSubmit(e) {\n    e.preventDefault();\n    console.log(text);\n  }\n\n  return (\n    <>\n      <h1>To Do</h1>\n      <form onChange={onSubmit}>\n        <input type=\"text\" value={text} onChange={onChange} />\n        <button>Add</button>\n      </form>\n      <ul>\n          {JSON.stringify(toDos)}</ul>\n    </>\n  );\n}\n\n//! A function mapStateToProps will give \"state\" (from \"store\") to here, \"Home\".\nfunction mapStateToProps(state, ownProps) {\n  //! Whatever I return, It will go to my component \"Home\" as a PROPS\n  // !Thanks to function, \"connect\"\n  return { addedProps: \"Yeah I am new!\" };\n} //! So, \"mapStateToProps\" means \"from the redux state, put a little bit into the home component as a props.\"\n\n//!\nexport default connect(mapStateToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}