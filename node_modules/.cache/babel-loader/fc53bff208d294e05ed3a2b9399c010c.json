{"ast":null,"code":"import { createStore } from \"redux\";\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\n\nconst addToDo = text => {\n  return {\n    text: ADD,\n    text\n  };\n};\n\nconst deleteToDo = text => {\n  return {\n    text: ADD,\n    text\n  };\n};\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD:\n      return [{\n        text: action.text,\n        id: Date.now()\n      }, ...state];\n\n    case DELETE:\n      return state.filter(toDo => toDo !== action.id);\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore();\nexport default store;","map":{"version":3,"sources":["/Users/tedchoi/Documents/GitHub/vanilla-redux/src/store.js"],"names":["createStore","ADD","DELETE","addToDo","text","deleteToDo","reducer","state","action","type","id","Date","now","filter","toDo","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACtB,SAAO;AACHA,IAAAA,IAAI,EAAEH,GADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMC,UAAU,GAAID,IAAD,IAAU;AACzB,SAAO;AACHA,IAAAA,IAAI,EAAEH,GADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,GAAL;AACE,aAAO,CAAC;AAAEG,QAAAA,IAAI,EAAEI,MAAM,CAACJ,IAAf;AAAqBM,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAAzB,OAAD,EAAwC,GAAGL,KAA3C,CAAP;;AACF,SAAKL,MAAL;AACE,aAAOK,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,KAAKN,MAAM,CAACE,EAAvC,CAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMQ,KAAK,GAAGf,WAAW,EAAzB;AAEA,eAAee,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\n\nconst addToDo = (text) => {\n    return {\n        text: ADD,\n        text\n    };\n}\n\nconst deleteToDo = (text) => {\n    return {\n        text: ADD,\n        text\n    };\n}\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD:\n      return [{ text: action.text, id: Date.now() }, ...state];\n    case DELETE:\n      return state.filter((toDo) => toDo !== action.id);\n    default:\n      return state;\n  }\n};\n\nconst store = createStore();\n\nexport default store;"]},"metadata":{},"sourceType":"module"}