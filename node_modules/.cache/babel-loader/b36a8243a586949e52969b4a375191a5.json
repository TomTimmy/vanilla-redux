{"ast":null,"code":"import { createStore } from \"redux\";\nconst add = document.getElementById(\"add\");\nconst minus = document.getElementById(\"minus\");\nconst number = document.querySelector(\"span\"); //! 중요: A reducer is a function that modifies your data. \n\nconst reducer = () => {\n  //! 중요: 리턴값은 곧 (저장될) 데이터가 된다.\n  return \"whatever reducer returns, that will be my data.\";\n}; //! Only countModifier can modifies the state ( in this, the state is \"count\" )\n\n\nconst countModifier = (count = 0, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return count + 1;\n\n    case \"MINUS\":\n      return count - 1;\n\n    default:\n      return count;\n  }\n};\n\nconst countStore = createStore(countModifier); //! A \"subscribe\" allows us to listen for changes in our stores.\n\ncountStore.subscribe();\n\nconst onchange = () => {\n  console.log(countStore.getState());\n};\n\ncountStore.subscribe(onchange);\nconsole.log(countStore.getState()); // 시작 count 값 = 0\n\ncountStore.dispatch({\n  type: \"ADD\"\n}); // count 값 = 1\n\ncountStore.dispatch({\n  type: \"ADD\"\n}); // count 값 = 2\n\ncountStore.dispatch({\n  type: \"ADD\"\n}); // count 값 = 3\n\ncountStore.dispatch({\n  type: \"ADD\"\n}); // count 값 = 4\n\ncountStore.dispatch({\n  type: \"ADD\"\n}); // count 값 = 5\n\ncountStore.dispatch({\n  type: \"MINUS\"\n}); // count 값 = 4\n\nconsole.log(countStore.getState()); // 최종 count 값 = 4","map":{"version":3,"sources":["/Users/tedchoi/Documents/GitHub/vanilla-redux/src/index.js"],"names":["createStore","add","document","getElementById","minus","number","querySelector","reducer","countModifier","count","action","type","countStore","subscribe","onchange","console","log","getState","dispatch"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAZ;AACA,MAAMC,KAAK,GAAIF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAf;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACI,aAAT,CAAuB,MAAvB,CAAf,C,CAEA;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB;AACA,SAAO,iDAAP;AACD,CAHD,C,CAKA;;;AACA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,OAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF;AACE,aAAOA,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMG,UAAU,GAAGZ,WAAW,CAACQ,aAAD,CAA9B,C,CAEA;;AACAI,UAAU,CAACC,SAAX;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,QAAX,EAAZ;AACD,CAFD;;AAIAL,UAAU,CAACC,SAAX,CAAqBC,QAArB;AAGAC,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,QAAX,EAAZ,E,CAAoC;;AAEpCL,UAAU,CAACM,QAAX,CAAoB;AAACP,EAAAA,IAAI,EAAE;AAAP,CAApB,E,CAAoC;;AACpCC,UAAU,CAACM,QAAX,CAAoB;AAACP,EAAAA,IAAI,EAAE;AAAP,CAApB,E,CAAoC;;AACpCC,UAAU,CAACM,QAAX,CAAoB;AAACP,EAAAA,IAAI,EAAE;AAAP,CAApB,E,CAAoC;;AACpCC,UAAU,CAACM,QAAX,CAAoB;AAACP,EAAAA,IAAI,EAAE;AAAP,CAApB,E,CAAoC;;AACpCC,UAAU,CAACM,QAAX,CAAoB;AAACP,EAAAA,IAAI,EAAE;AAAP,CAApB,E,CAAoC;;AACpCC,UAAU,CAACM,QAAX,CAAoB;AAACP,EAAAA,IAAI,EAAE;AAAP,CAApB,E,CAAsC;;AAEtCI,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,QAAX,EAAZ,E,CAAoC","sourcesContent":["import { createStore } from \"redux\";\n\nconst add = document.getElementById(\"add\");\nconst minus  = document.getElementById(\"minus\");\nconst number = document.querySelector(\"span\");\n\n//! 중요: A reducer is a function that modifies your data. \nconst reducer = () => {\n  //! 중요: 리턴값은 곧 (저장될) 데이터가 된다.\n  return \"whatever reducer returns, that will be my data.\"\n}; \n \n//! Only countModifier can modifies the state ( in this, the state is \"count\" )\nconst countModifier = (count = 0, action) => { \n  switch (action.type) {\n    case \"ADD\":\n      return count + 1;\n    case \"MINUS\":\n      return count - 1;\n    default:\n      return count;\n  }\n}; \n\nconst countStore = createStore(countModifier);\n\n//! A \"subscribe\" allows us to listen for changes in our stores.\ncountStore.subscribe()\n\nconst onchange = () => {\n  console.log(countStore.getState())\n}\n\ncountStore.subscribe(onchange) \n\n\nconsole.log(countStore.getState()); // 시작 count 값 = 0\n\ncountStore.dispatch({type: \"ADD\"}); // count 값 = 1\ncountStore.dispatch({type: \"ADD\"}); // count 값 = 2\ncountStore.dispatch({type: \"ADD\"}); // count 값 = 3\ncountStore.dispatch({type: \"ADD\"}); // count 값 = 4\ncountStore.dispatch({type: \"ADD\"}); // count 값 = 5\ncountStore.dispatch({type: \"MINUS\"}); // count 값 = 4\n\nconsole.log(countStore.getState()); // 최종 count 값 = 4\n\n\n\n"]},"metadata":{},"sourceType":"module"}